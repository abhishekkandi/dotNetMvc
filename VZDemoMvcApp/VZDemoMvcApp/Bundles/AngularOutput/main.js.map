{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/todo/todo.component.html","webpack:///./src/todo/todo.component.scss","webpack:///./src/todo/todo.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sK;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAQ1C;IAAA;IAA2B,CAAC;IAAf,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OAEW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACe;AAET;AACO;AAER;AAe9C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,qEAAgB;gBAChB,uEAAa;aACd;YACD,SAAS,EAAE,CAAC,2DAAU,CAAC;YACvB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OAEW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;ACtBqB;AACO;AAMlD;IAKE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH7B,QAAG,GAAG,wBAAwB,CAAC;QAC/B,wBAAmB,GAAM,IAAI,CAAC,GAAG,UAAO,CAAC;IAER,CAAC;IAEzC,oCAAe,GAAf;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAClE,CAAC;IATkB,UAAU;QAD9B,gEAAU,EAAE;+EAMe,+DAAU;OALjB,UAAU,CAU9B;IAAD,iBAAC;CAAA;AAVoB,yEAAU;;;;;;;;;;;;;ACP/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;ACXpC,2IAA2I,aAAa,KAAK,gBAAgB,0C;;;;;;;;;;;ACA7K,+DAA+D,mI;;;;;;;;;;;;;;;;;;ACAb;AAGC;AAQnD;IAGE,uBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,4FAAoC;;SAErC,CAAC;+EAKgC,+DAAU;OAH/B,aAAa,CAWzB;IAAD,oBAAC;CAAA;AAXyB","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <p>Hello World..</p>\\r\\n  <p>This is VZ Demo Web App</p>\\r\\n  <todo></todo>\\r\\n  <todo></todo>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from '../todo/todo.component'\n\nimport AppService from './shared/api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport TodoItem from '../../todo/todoItem';\r\n\r\n@Injectable()\r\nexport default class ApiService {\r\n\r\n  public API = 'http://localhost:31260';\r\n  public TODO_ITEMS_ENDPOINT = `${this.API}/todo`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllTodoItems(): Observable<Array<TodoItem>> {\r\n    return this.http.get<Array<TodoItem>>(this.TODO_ITEMS_ENDPOINT);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>Todo Component</h1>\\r\\n  <span *ngFor=\\\"let todoItem of todoItems\\\">\\r\\n    {{todoItem.Id}} - {{todoItem.Title}}\\r\\n    <br />\\r\\n  </span>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvdG9kby90b2RvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport TodoItem from './todoItem';\nimport ApiService from '../app/shared/api.service';\n\n@Component({\n  selector: 'todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\n\nexport class TodoComponent implements OnInit {\r\n  todoItems: Array<TodoItem>;\r\n\r\n  constructor(private apiService: ApiService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.getAllTodoItems().subscribe(data => {\r\n      this.todoItems = data;\r\n    });\r\n  }\r\n}\n"],"sourceRoot":""}